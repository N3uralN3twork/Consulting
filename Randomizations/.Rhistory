if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = 1:row_count, mattrix, ID2 = result))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", 30)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = 1:row_count, mattrix,
ID2 = mattrix[[i]]))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", 30)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = 1:row_count, mattrix,
ID2 = result[i]))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", 30)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = 1:row_count, mattrix,
ID2 = result[[i]]))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")
}
}
result
result <- data.frame(result)
result
View(result)
result <- t(data.frame(result))
result
View(result)
# Building the design schema:
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", 30)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = 1:row_count, mattrix,
ID2 = result))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
View(matt)
# Building the design schema:
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", 30)
for (i in seq(1, 30)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = result, Order = 1:row_count, mattrix))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste("AAA", i, sep = "0")
} else {
result[[i]] <- paste("AAA", i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = result, Order = 1:row_count, mattrix))
}
matt = SCHEMA(NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix = matrix(nrow = row_count, ncol = col_count)
return(data.frame(ID = result, Order = 1:row_count, mattrix))
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
matt = SCHEMA(prefix = "ABC", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix <- matrix(nrow = row_count, ncol = col_count)
final <- data.frame(ID = result, Order = 1:row_count, mattrix, row.names = FALSE)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix <- matrix(nrow = row_count, ncol = col_count)
final <- data.frame(ID = result, Order = 1:row_count, mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 2, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix <- matrix(nrow = row_count, ncol = col_count)
final <- data.frame(ID = result, Order = 1:row_count, mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 2, NFactors = 3)
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
View(matt)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix <- matrix(nrow = row_count, ncol = col_count)
final <- data.frame(ID = result, Order = 1:row_count, mattrix, row.names = NULL)
final <- final[sample(nrow(final)), ]
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
mattrix <- matrix(nrow = row_count, ncol = col_count)
final <- data.frame(ID = result, mattrix, row.names = NULL)
final <- final[sample(nrow(final)), ]
final <- data.frame(Order = 1:row_count, final)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
strrep("T", 3)
rep("X", 30)
rep("T", 30)
rep("T", 15)
rep("C", 15)
rep("T", 15)
rep("C", 15)
T = rep("T", 15)
C = rep("C", 15)
TLC = cbind(T, C)
View(TLC)
TLC = rbind(T, C)
View(TLC)
TLC = merge(T, C)
View(TLC)
rep(c("T", "C"), 15)
TLC <- rep(c("T", "C"), 15)
print(TLC)
TLC <- t(rep(c("T", "C"), 15))
View(TLC)
library(dplyr)
sample(TLC)
TLC <- sample(t(rep(c("T", "C"), 15)))
TLC
for (i in seq(1, 30)){
if (i < 10){
print(paste("AAA", i, sep = "0"))
} else {
print(paste("AAA", i, sep = ""))
}
}
TLC
# Assigning random treatment/control:
ID <- matt %>% select(ID)
View(ID)
paste(ID, TLC)
TLC
paste(ID, TLC, sep = "")
paste(ID, TLC, sep = "")
TLC
TLC
ID <- matt %>% select(ID)
TLC <- data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
TLC
paste(ID, TLC, sep = "")
rm(ID)
test <- matt
test$Test <- paste(matt$ID, TLC$TorC, sep = "")
View(test)
View(test)
test$ID <- paste(matt$ID, TLC$TorC, sep = "")
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final$ID = paste(mattrix$ID, TLC$TorC, sep = "")
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
return(TLC)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
View(matt)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(mattrix$ID, TLC$TorC, sep = ""))
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""))
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""))
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""))
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
#final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""), mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
ID = seq(1:row_count)
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""), mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""), Order = seq(1:row_count), mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""), Order = seq(1:row_count), mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
rm(list = ls())
for (i in seq(1, 30)){
if (i < 10){
print(paste("AAA", i, sep = "0"))
} else {
print(paste("AAA", i, sep = ""))
}
}
rm(i)
library(dplyr)
library(randomizeR)
# Building the design schema:
SCHEMA <- function(prefix = "AAA", NSubjects, NSites=1, NFactors){
row_count = (NSubjects * NSites)
col_count = (NFactors)
result <- vector("list", NSubjects)
for (i in seq(1, NSubjects)){
if (i < 10){
result[[i]] <- paste(prefix, i, sep = "0")
} else {
result[[i]] <- paste(prefix, i, sep = "")}}
result <- t(as.data.frame(result))
TLC = data.frame(TorC = sample(t(rep(c("T", "C"), 15))))
mattrix <- matrix(nrow = row_count, ncol = col_count)
final = data.frame(ID = result, mattrix, row.names = NULL)
final = final[sample(nrow(final)), ]
final = data.frame(Order = 1:row_count, final)
final = data.frame(ID = paste(final$ID, TLC$TorC, sep = ""), Order = seq(1:row_count), mattrix, row.names = NULL)
return(final)
}
matt = SCHEMA(prefix = "AAA", NSubjects = 30, NSites = 1, NFactors = 3)
